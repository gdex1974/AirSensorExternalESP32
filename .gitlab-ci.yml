# You can override the included template(s) by including variable overrides
# SAST customization: https://docs.gitlab.com/ee/user/application_security/sast/#customizing-the-sast-settings
# Secret Detection customization: https://docs.gitlab.com/ee/user/application_security/secret_detection/#customizing-settings
# Dependency Scanning customization: https://docs.gitlab.com/ee/user/application_security/dependency_scanning/#customizing-the-dependency-scanning-settings
# Container Scanning customization: https://docs.gitlab.com/ee/user/application_security/container_scanning/#customizing-the-container-scanning-settings
# Note that environment variables can be set in several places
# See https://docs.gitlab.com/ee/ci/variables/#cicd-variable-precedence
stages:
- check-sast
- build

variables:
  GIT_SUBMODULE_STRATEGY: recursive

build-esp32:
  stage: build
  tags:
  - docker
  image: espressif/idf:v4.4.6
  script:
  - mkdir -p build && cd build && cmake -DPYTHON_DEPS_CHECKED=1 -DESP_PLATFORM=1 -DCCACHE_ENABLE=0 -DIDF_TARGET=esp32 -G Ninja .. && cd ..
  - idf.py build
  artifacts:
    paths:
    - build/ExternalAirQualitySensor.bin
build-esp32c3:
  stage: build
  tags:
    - docker
  image: espressif/idf:v4.4.6
  script:
    - mkdir -p build && cd build && cmake -DPYTHON_DEPS_CHECKED=1 -DESP_PLATFORM=1 -DCCACHE_ENABLE=0 -DIDF_TARGET=esp32c3 -G Ninja .. && cd ..
    - idf.py build
  artifacts:
    paths:
      - build/ExternalAirQualitySensor.bin

sast:
  stage: check-sast
  tags:
  - sast-runner
secret_detection:
  stage: check-sast
  tags:
  - sast-runner
include:
- template: SAST.gitlab-ci.yml
- template: Security/SAST.gitlab-ci.yml
- template: Security/Secret-Detection.gitlab-ci.yml
